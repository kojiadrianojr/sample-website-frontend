{"version":3,"file":"static/js/459.093273f3.chunk.js","mappings":"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","sources":["Pages/Homepage/sections/styled.tsx","Pages/Homepage/sections/Home.tsx","config/constants/homepageConfig.ts","Pages/Homepage/sections/icons/MetaGamers.tsx","Pages/Homepage/sections/icons/MetaGamingPad.tsx","Pages/Homepage/sections/icons/Dao.tsx","Pages/Homepage/sections/icons/Labs.tsx","Pages/Homepage/sections/icons/Yield.tsx","Pages/Homepage/sections/icons/Warriors.tsx","Pages/Homepage/sections/icons/Vault.tsx","Pages/Homepage/sections/icons/Nft.tsx","Pages/Homepage/sections/Ecosystem.tsx","Pages/Homepage/sections/Growth.tsx","Pages/Homepage/sections/Chain.tsx","Pages/Homepage/index.tsx","components/SvgIcon/SvgIcon.tsx"],"sourcesContent":["import { Heading } from \"@metagg/mgg-uikit\";\r\nimport styled from \"styled-components\";\r\nimport BackgroundImage from \"assets/background/GrowthBG.png\";\r\nimport MainBG from \"assets/background/MainBG.png\";\r\n// Sections\r\n\r\nconst SectionContainer = styled.div<{ height?: string }>`\r\n  min-height: ${({ height }) => height ?? \"100\"}vh;\r\n  display: flex;\r\n  padding: 15px;\r\n`;\r\n\r\nexport const HomeContainer = styled(SectionContainer)`\r\n  background-color: ${({ theme }) => theme.addOnColors.background1};\r\n  background-image: url(${MainBG});\r\n  background-repeat: no-repeat;\r\n  background-size: 100% 90%;\r\n  background-position: center top;\r\n`;\r\nexport const EcoContainer = styled(SectionContainer)`\r\n  background-color: ${({ theme }) => theme.addOnColors.background2};\r\n  padding: 24px;\r\n`;\r\n\r\nexport const GrowthContainer = styled(SectionContainer)`\r\n  background-color: ${({ theme }) => theme.addOnColors.background1};\r\n  background-image: url(${BackgroundImage});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 24px;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ChainContainer = styled(SectionContainer)`\r\n    \r\n    background-color ${({theme}) => theme.addOnColors.background2};\r\n`\r\n// Components\r\n\r\nexport const PageTitle = styled(Heading)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  margin: 25px 0px;\r\n  letter-spacing: 1px;\r\n`;\r\n","import { Flex, Heading, Text } from '@metagg/mgg-uikit'\r\nimport styled from 'styled-components'\r\nimport React from 'react'\r\nimport MGGLogo from 'assets/background/MGGLogo.png'\r\nimport { HomeContainer, PageTitle } from './styled'\r\n\r\n\r\nconst Container = styled(Flex)`\r\n    min-width: 0px;\r\n    max-width: 720px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    margin: 0px auto;\r\n    position: relative;\r\n    font-size: 12px;\r\n     :before {\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        opacity: 0.3;\r\n        display: block;\r\n        position: absolute;\r\n        background-image: url(${MGGLogo});\r\n        background-repeat: no-repeat;\r\n        background-size: 50%;\r\n        background-position: center 10px;\r\n        content: ' ';\r\n        z-index: 0;\r\n    }\r\n    & :first-child { \r\n        letter-spacing: 2px;\r\n        line-height: 1em;\r\n        z-index: 1;\r\n    }\r\n    ${({theme}) => theme.mediaQueries.md} {\r\n        min-width: 720px;\r\n        font-size: 19px;\r\n    }\r\n\r\n`\r\nconst DescriptionContainer = styled(Flex)`\r\n\r\n    // margin-top: 30px;\r\n    & > * {\r\n        margin: 10px 0px;\r\n    }\r\n`\r\n\r\nconst Section:React.FC = () => {\r\n\r\n    return (\r\n        <HomeContainer height='95'>\r\n            <Container>\r\n                <Text fontSize=\"3em\" bold marginTop='160px'>We Create Metaverse Gaming Opportunities for P2E Masses </Text>\r\n                <DescriptionContainer flexDirection='column' alignItems='space-around' padding='10px 0px'>\r\n                    <PageTitle size='lg'> About MetaGaming Guild </PageTitle>\r\n                    <Text as='p' fontSize='1.2em'>\r\n                        MetaGaming Guild is a unified DAO-based ecosystem of Gaming\r\n                        Guild, INO/IGO Launchpad, Gamefi Vaults, Game Yield Farming\r\n                        and Play-to-Earn Game aimed at democratizing game finance.\r\n                    </Text>\r\n                    <Text fontSize='1.2em'>\r\n                        MetaGaming Guild envisions to become the primary and most\r\n                        community-centric DAO in the Gamefi metaverse!\r\n                    </Text>\r\n                </DescriptionContainer>\r\n            </Container>\r\n        </HomeContainer>\r\n    )\r\n}\r\n\r\nexport default Section","import { IEcosystems, IFigures } from \"./types\";\r\n\r\nexport const Ecosystems: IEcosystems[] = [\r\n  {\r\n    name: \"MetaGamers\",\r\n    subtitle: \"Scholarship\",\r\n    description:\r\n      \"MGG is the fastest growing scholarship program with 50% month-on-month growth\",\r\n    image: \"MetaGamers\",\r\n  },\r\n  {\r\n    name: \"MetaGaming Pad\",\r\n    subtitle: \"INO/IGO Launchpad\",\r\n    description:\r\n      \"MGG is the very FIRST gaming guild to become a launchpad for gamers!\",\r\n    image: \"MetaGamingPad\",\r\n  },\r\n  {\r\n    name: \"MetaGameFi Vault\",\r\n    subtitle: \"Gaming Assets\",\r\n    description:\r\n      \"MGG acquires the best gaming assets and puts them in a vault where MGG holders can earn through staking\",\r\n    image: \"Vault\",\r\n  },\r\n  {\r\n    name: \"MetaGaming Yield\",\r\n    subtitle: \"Yield Farming\",\r\n    description:\r\n      \"MGG offers the FIRST form of automated NFT yield to guild members\",\r\n    image: \"Yield\",\r\n  },\r\n  {\r\n    name: \"MetaGaming Labs\",\r\n    subtitle: \"Incubator\",\r\n    description:\r\n      \"MGG is a project incubator that supports promising Gamefi startups to excel in the global gaming arena\",\r\n    image: \"Labs\",\r\n  },\r\n  {\r\n    name: \"MetaGaming DAO\",\r\n    subtitle: \"DAO Community\",\r\n    description: \"MGG holders get to vote on the direction of the guild\",\r\n    image: \"Dao\",\r\n  },\r\n  {\r\n    name: \"MetaSaga Warriors\",\r\n    subtitle: \"P2E Game\",\r\n    description:\r\n      \"MGG is crafting a futuristic P2E game for tactical gamers in the metaverse!\",\r\n    image: \"Warriors\",\r\n    status: \"coming soon\",\r\n  },\r\n  {\r\n    name: \"MetaGaming NFTs\",\r\n    subtitle: \"Data Unit Assets\",\r\n    description:\r\n      \"MGG offers NFT to guild members\",\r\n    image: \"Nft\",\r\n  },\r\n];\r\n\r\n\r\nexport const Figures:IFigures[] = [\r\n  {\r\n    amount: '$100,000+',\r\n    subtitle: 'Monthly Revenue',\r\n  },\r\n  {\r\n    amount: '1,000+',\r\n    subtitle: 'Active Scholars',\r\n  },\r\n  {\r\n    amount: '30+',\r\n    subtitle: 'Acquired Early-game Assets'\r\n  },\r\n  {\r\n    amount: '1,000,000+',\r\n    subtitle: 'SLP Farmed per Month'\r\n  },\r\n  {\r\n    amount: '30+',\r\n    subtitle: 'Renowned Gaming Partners'\r\n  },\r\n  {\r\n    amount: '5,000+',\r\n    subtitle: 'NFTs in the Treasury'\r\n  }\r\n]\r\n","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport MetaGamersPNG from 'assets/images/MetaGamers.png'\r\nimport { SvgProps } from '../../../../components/SvgIcon/types'\r\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon width={120} Img={MetaGamersPNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport MetaGamersPNG from 'assets/images/MetagamingPad.png'\r\nimport { SvgProps } from '../../../../components/SvgIcon/types'\r\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon width={120} Img={MetaGamersPNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/images/Dao.png'\r\nimport { SvgProps } from '../../../../components/SvgIcon/types'\r\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon width={120} Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/images/Labs.png'\r\nimport { SvgProps } from '../../../../components/SvgIcon/types'\r\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon width={120} Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/images/Yield.png'\r\nimport { SvgProps } from '../../../../components/SvgIcon/types'\r\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon width={120} Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/images/Warriors.png'\r\nimport { SvgProps } from '../../../../components/SvgIcon/types'\r\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon width={120} Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/images/Vault.png'\r\nimport { SvgProps } from '../../../../components/SvgIcon/types'\r\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon width={120} Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/images/Nft.png'\r\nimport { SvgProps } from '../../../../components/SvgIcon/types'\r\nimport SvgIcon from '../../../../components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon width={120} Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React, { useContext } from \"react\";\r\nimport styled, { ThemeContext } from \"styled-components\";\r\nimport { Flex, Text } from \"@metagg/mgg-uikit\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { breakpoints } from \"theme/Breakpoints\";\r\nimport { SvgProps } from \"components/SvgIcon/types\";\r\nimport { EcoContainer, PageTitle } from \"./styled\";\r\nimport { IEcosystems } from \"config/constants/types\";\r\nimport { Ecosystems } from \"config/constants/homepageConfig\";\r\nimport * as IconModule from './icons'\r\n\r\nconst Container = styled(Flex)`\r\n  padding: 50px;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  margin: 0px auto;\r\n  max-width: 1400px;\r\n  align-items: space-between;\r\n  justify-content: space-evenly;\r\n`;\r\nconst StyledCard = styled.div`\r\n  padding: 24px;\r\n  border: 1px solid ${({ theme }) => theme.colors.MGG_accent2};\r\n  background-color: ${({ theme }) => theme.addOnColors.background1};\r\n  height: 375px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  // justify-content: space-around;\r\n  @media screen and (max-width: ${breakpoints.Mobile.tablet}px) {\r\n      font-size: 12px;\r\n  }\r\n  & > * {\r\n    margin: 5px 0px;\r\n  }  \r\n`;\r\nconst CardSection = styled(Flex)`\r\n  & > ${Text}.title {\r\n    color: ${({ theme }) => theme.colors.MGG_accent2};\r\n  }\r\n  & > ${Text}.status {\r\n    color: ${({ theme }) => theme.colors.MGG_accent1};\r\n    margin: 0.5rem 0rem;\r\n  }\r\n  & > ${Text}.desc {\r\n    color: ${({ theme }) => theme.colors.text};\r\n    margin: 5px 0px;\r\n  }\r\n`;\r\n\r\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> }\r\n\r\nconst Card: React.FC<IEcosystems> = ({\r\n image,\r\n  name,\r\n  subtitle,\r\n  description,\r\n  status = \"\",\r\n}) => {\r\n  const theme = useContext(ThemeContext);\r\n    const Icon = Icons[image]\r\n    const iconElement: React.ReactElement = <Icon />\r\n  return (\r\n    <StyledCard>\r\n        {iconElement}\r\n      <CardSection flexDirection=\"column\">\r\n      <Text className=\"title\" fontSize=\"1.5em\" bold>\r\n          ({name})\r\n        </Text>\r\n        <Text className=\"title\" fontSize=\"1.2em\" marginTop=\"-7px\">\r\n          ({subtitle})\r\n        </Text>\r\n        <Text className=\"status\" textTransform=\"uppercase\" bold>\r\n          {status && status}\r\n        </Text>\r\n        <Text className=\"desc\" as=\"p\">\r\n          {description}\r\n        </Text>\r\n      </CardSection>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nconst Cards: React.FC = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      columnSpacing={{ xs: 2, sm: 2, md: 2 }}\r\n      rowSpacing={{ xs: 4, sm: 5, md: 6}}\r\n      justifyContent=\"center\"\r\n      alignItems='center'\r\n    >\r\n      {Ecosystems.map((Ecosystem) => {\r\n        const { name, subtitle, description, status, image } = Ecosystem;\r\n        return (\r\n          <Grid key={name} item xs={12} sm={6} md={4} lg={3}>\r\n            <Card\r\n              name={name}\r\n              subtitle={subtitle}\r\n              description={description}\r\n              status={status}\r\n              image={image}\r\n            />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Section: React.FC = () => {\r\n  return (\r\n    <EcoContainer height=\"100\">\r\n      <Container>\r\n        <PageTitle size=\"xl\">MetaGaming Guild Ecosystem</PageTitle>\r\n          <Cards />\r\n      </Container>\r\n    </EcoContainer>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Text, Heading, Flex } from \"@metagg/mgg-uikit\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport GrowthPNG from \"assets/images/Growth.png\";\r\nimport { GrowthContainer, PageTitle } from \"./styled\";\r\nimport { Figures } from \"../../../config/constants/homepageConfig\";\r\n\r\n\r\nconst Container = styled.div`\r\n  margin: 30px auto;\r\n  display: flex;\r\n  padding: 25px;\r\n  text-align: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\nconst FigureWrapper = styled.div`\r\n  min-width: 0px;\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 24px;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n    text-align: center;\r\n  & > * {\r\n    ${Text}.subtitle {\r\n      color: ${({ theme }) => theme.colors.MGG_accent2};\r\n    }\r\n  }\r\n\r\n  ${({theme}) => theme.mediaQueries.md} {\r\n      min-width: 1400px;\r\n  }\r\n`;\r\n\r\nconst FigureComponent = () => {\r\n  return (\r\n    <FigureWrapper>\r\n      <Grid container alignItems='center' rowSpacing={{xs: 4, md: 4}} >\r\n        <Grid item xs={12} sm={12} md={6} zeroMinWidth>\r\n          <Grid container rowSpacing={{xs: 5,  md: 12 }}>\r\n            {Figures.map((figure) => {\r\n              return (\r\n                <Grid\r\n                  key={figure.subtitle}\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  zeroMinWidth\r\n                >\r\n                  <Heading size=\"xl\">{figure.amount}</Heading>\r\n                  <Text className=\"subtitle\" fontSize=\"1.5em\">\r\n                    {figure.subtitle}\r\n                  </Text>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6}>\r\n          <img alt=\"growth-image\" src={GrowthPNG} />\r\n        </Grid>\r\n      </Grid>\r\n    </FigureWrapper>\r\n  );\r\n};\r\n\r\nconst Section: React.FC = () => {\r\n  return (\r\n    <GrowthContainer height='50'>\r\n        <div style={{textAlign: 'center'}}>\r\n          <PageTitle size=\"xl\">MetaGaming Guild Growth Figures</PageTitle>\r\n          <Text fontSize=\"1.2em\">\r\n            Since the project was launched in 2021, MetaGaming Guild has\r\n            maintaned a 50% Month-on-Month growth\r\n          </Text>\r\n        </div>\r\n      <Container>\r\n        <FigureComponent />\r\n      </Container>\r\n    </GrowthContainer>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text } from '@metagg/mgg-uikit'\r\nimport { ChainContainer, PageTitle } from './styled'\r\nimport BSC from 'assets/logo/BSC.png'\r\nimport ETH from 'assets/logo/ETH.png'\r\nimport FANTOM from 'assets/logo/Fantom.png'\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n    min-width: 0px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    margin: 0px auto;\r\n    padding: 25px;\r\n    flex-direction: column;\r\n    ${({theme}) => theme.mediaQueries.md} {\r\n        min-width: 1500px;\r\n        font-size: 16px;\r\n    }\r\n`\r\nconst StyledImg = styled.img`\r\n    width: 300px;\r\n    margin: 5px auto;\r\n    ${({theme}) => theme.mediaQueries.md} {\r\n        width: 350px;\r\n        margin: 0px auto;\r\n    }\r\n`\r\n\r\nconst chains = [BSC, ETH, FANTOM]\r\n\r\nconst Section: React.FC = () => {\r\n    return (\r\n        <ChainContainer height='60'>\r\n            <Container>\r\n                <Flex flexDirection='column' alignItems='center' justifyContent='flex-start' style={{width: '100%', textAlign: 'center'}}>\r\n                    <PageTitle size=\"xl\">Game Finance. Democratized.</PageTitle>\r\n                    <Text fontSize='1.8em'>Users get Real-time Cross-Chain Interoperability</Text>\r\n                </Flex>\r\n                <Flex justifyContent='space-evenly' alignItems='center' style={{ width: '100%'}} flexWrap='wrap'>\r\n                  {chains.map((src) => (<StyledImg key={src} src={src} alt='chain-icon' />))}\r\n                </Flex>\r\n            </Container>\r\n        </ChainContainer>\r\n    )\r\n}\r\n\r\nexport default Section;","import React from 'react'\r\nimport { Text } from '@metagg/mgg-uikit'\r\nimport Page from '../../components/layout/Page'\r\nimport * as Sections from './sections'\r\n\r\nconst Pages = (Sections as unknown) as { [key: string]: React.FC<{}> };\r\nconst Homepage = () => {\r\n    return (\r\n        <Page>\r\n             { \r\n                Object.keys(Pages).map((key) => {\r\n                    const Page = Pages[key] as React.FC\r\n                    return (<Page key={key} />)\r\n                })\r\n            }\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import React from 'react'\r\nimport styled from 'styled-components'\r\n// import { SvgContainer } from \"./svgicon-styles\"\r\n\r\ninterface Props {\r\n  Icon?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>\r\n  Img?: string\r\n  width?: number\r\n  height?: number\r\n  fill?: string\r\n}\r\n\r\nexport const SvgContainer = styled.div<{\r\n  height?: number\r\n  width?: number\r\n  fill?: string\r\n}>`\r\n  height: 'auto';\r\n  width: 'auto';\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & svg {\r\n    // fill: ${(props) => (props.fill ? props.fill : props.theme.colors.text)};\r\n    height: ${(props) => (props.height ? `${props.height}px` : '100%')};\r\n    width: ${(props) => (props.width ? `${props.width}px` : '100%')};\r\n  }\r\n`\r\n\r\nconst SvgIcon: React.FC<Props> = (props) => {\r\n  const { Icon, Img, width } = props\r\n  return (\r\n    <SvgContainer {...props}>\r\n      {Icon ? <Icon /> : <img src={Img} alt=\"tier-icon\" width={width} style={{ height: width }} />}\r\n    </SvgContainer>\r\n  )\r\n}\r\n\r\nexport default SvgIcon"],"names":["SectionContainer","styled","height","HomeContainer","theme","addOnColors","background1","MainBG","EcoContainer","background2","GrowthContainer","BackgroundImage","ChainContainer","PageTitle","Heading","colors","primary","Container","Flex","MGGLogo","mediaQueries","md","DescriptionContainer","fontSize","bold","marginTop","flexDirection","alignItems","padding","size","as","Ecosystems","name","subtitle","description","image","status","Figures","amount","props","SvgIcon","width","Img","MetaGamersPNG","PNG","StyledCard","MGG_accent2","breakpoints","CardSection","Text","MGG_accent1","text","Icons","IconModule","Card","Icon","useContext","ThemeContext","iconElement","className","textTransform","Cards","Grid","container","columnSpacing","xs","sm","rowSpacing","justifyContent","map","Ecosystem","item","lg","FigureWrapper","FigureComponent","zeroMinWidth","figure","alt","src","GrowthPNG","style","textAlign","StyledImg","chains","BSC","ETH","FANTOM","flexWrap","Pages","Sections","Page","Object","keys","key","SvgContainer","fill"],"sourceRoot":""}