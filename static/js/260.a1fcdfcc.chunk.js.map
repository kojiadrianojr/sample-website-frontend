{"version":3,"file":"static/js/260.a1fcdfcc.chunk.js","mappings":"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","sources":["config/constants/revenue-model.ts","Pages/Revenue-Model/sections/styled.tsx","Pages/Revenue-Model/Icons/Scholarship.tsx","Pages/Revenue-Model/Icons/Launchpad.tsx","Pages/Revenue-Model/Icons/Sales.tsx","Pages/Revenue-Model/Icons/Investments.tsx","Pages/Revenue-Model/sections/Details.tsx","Pages/Revenue-Model/sections/Header.tsx","Pages/Revenue-Model/index.tsx","components/SvgIcon/SvgIcon.tsx"],"sourcesContent":["import { RevenueModelConfig } from \"./types\";\r\n\r\nexport const RevenueModel:RevenueModelConfig[] = [{\r\n name: 'Scholarship Program',\r\n description: 'MGG buys best-in-class NFTs from gaming startups and rents them out to our community of players through our live profit-sharing scholarship program',\r\n image: 'ScholarshipIcon',\r\n},\r\n{\r\n name: 'IGO/INO Launchpad',\r\n description: 'Our gaming launchpad seamlessly hosts a wide collection of exciting and incredible incoming play-to-earn NFT games for IGOs/INOs',\r\n image: 'LaunchpadIcon',\r\n},\r\n{\r\n name: 'NFT Sales',\r\n description: 'We have an ever-growing collection of NFT games in our GameFi Vaults - the first form of yield farming for blockchain games',\r\n image: 'SalesIcon',\r\n},\r\n{\r\n name: 'Investments and others',\r\n description: 'Along with our high-profile backers and partners, MGG invests in promising GameFi projects',\r\n image: 'InvestmentsIcon',\r\n}\r\n]\r\n","import styled from 'styled-components'\r\nimport MainBG from \"assets/background/RevenueModelBG.png\";\r\nimport { Flex, Text } from '@metagg/mgg-uikit'\r\nimport { breakpoints } from '../../../theme/Breakpoints';\r\n\r\nexport const SectionContainer = styled.div<{ height?: string; mobileHeight?: string}>`\r\n  min-height: ${({ height }) => height ?? \"100\"}vh;\r\n  display: flex;\r\n  padding: 15px;\r\n  @media screen and (max-width: ${breakpoints.Mobile.tablet}px){\r\n    min-height: ${({mobileHeight, height}) => mobileHeight ?? height}vh;\r\n  }\r\n`;\r\n\r\nexport const HeaderContainer = styled(SectionContainer)`\r\n  background-color: ${({ theme }) => theme.addOnColors.background1};\r\n  background-image: url(${MainBG});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center top;\r\n`\r\nexport const DetailsContainer = styled(SectionContainer)`\r\n  background-color: ${({theme}) => theme.addOnColors.background1};\r\n`\r\nexport const Box = styled(Flex)`\r\n  max-width: 1440px;\r\n  padding: 24px;\r\n  .text-section {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n  }\r\n  .icon-element {\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & > * {\r\n      width: 50%;\r\n    }\r\n    @media screen and (max-width: ${breakpoints.Mobile.l}px){\r\n      display: none;\r\n    }\r\n    @media screen and (max-width: ${breakpoints.Mobile.tablet}px){\r\n      & > * {\r\n        width: 250px;\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const Title = styled(Text)`\r\n  color: ${({theme}) => theme.colors.primary};\r\n  margin-bottom: 15px;\r\n  font-weight: bold;\r\n`","import React from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/revenue-model/Scholarship.png'\r\nimport { SvgProps } from 'components/SvgIcon/types'\r\nimport SvgIcon from 'components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/revenue-model/IDO INO Launchpad.png'\r\nimport { SvgProps } from 'components/SvgIcon/types'\r\nimport SvgIcon from 'components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/revenue-model/NFT Sales.png'\r\nimport { SvgProps } from 'components/SvgIcon/types'\r\nimport SvgIcon from 'components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React, { SVGAttributes, useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport PNG from 'assets/revenue-model/Investment.png'\r\nimport { SvgProps } from 'components/SvgIcon/types'\r\nimport SvgIcon from 'components/SvgIcon/SvgIcon'\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return <SvgIcon Img={PNG} />\r\n}\r\n\r\nexport default Icon","import React from \"react\";\r\nimport { Text, Flex } from \"@metagg/mgg-uikit\";\r\nimport { Grid } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport { SvgProps } from \"components/SvgIcon/types\";\r\nimport { RevenueModel } from \"config/constants/revenue-model\";\r\nimport { RevenueModelConfig } from \"config/constants/types\";\r\nimport { DetailsContainer, Title, Box } from \"./styled\";\r\nimport * as IconModule from \"../Icons\";\r\n\r\nconst Container = styled.div`\r\n  margin: 0px auto;\r\n  padding: 17px;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> };\r\nconst Section: React.FC = () => {\r\n  return (\r\n    <DetailsContainer>\r\n      <Container>\r\n        {RevenueModel.map((model: RevenueModelConfig, ind: number) => {\r\n          const { name, description, image } = model;\r\n          const Icon = Icons[image];\r\n          const iconElement: React.ReactElement = <Icon mr=\"8px\" />;\r\n          if (ind % 2 !== 0) {\r\n            return (\r\n              <Box key={ind}>\r\n                <div className=\"icon-element\">\r\n                {iconElement}\r\n                </div>\r\n                <div className='text-section'>\r\n                  <Title fontSize=\"3em\">{name}</Title>\r\n                  <Text color=\"textSubtle\" fontSize=\"1.5em\">\r\n                    {description}\r\n                  </Text>\r\n                </div>\r\n              </Box>\r\n            );\r\n          }\r\n          return (\r\n            <Box key={ind}>\r\n              <div className='text-section'>\r\n                <Title fontSize=\"3em\">{name}</Title>\r\n                <Text color=\"textSubtle\" fontSize=\"1.5em\">\r\n                  {description}\r\n                </Text>\r\n              </div>\r\n              <div className=\"icon-element\">\r\n              {iconElement}\r\n              </div>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Container>\r\n    </DetailsContainer>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { Text } from '@metagg/mgg-uikit';\r\nimport styled from 'styled-components'\r\nimport React from 'react'\r\nimport { HeaderContainer } from './styled';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: center;\r\n    font-size: 8px;\r\n    margin: 0px auto;\r\n    width: 100%;\r\n    ${({theme}) => theme.mediaQueries.md} {\r\n        font-size: 17px;\r\n        width: 1200px;\r\n    }\r\n`\r\n\r\nconst Section:React.FC = () => {\r\n    return (\r\n        <HeaderContainer height='95' mobileHeight='70'>\r\n            <Container>\r\n                <Text as='p' fontSize='3.5em' bold>\r\n                    With the possibilities of blockchain technology, NFT, cryptocurrency, and our strong play-to-earn GameFi community, MetaGaming Guild uses diversified sources of income such as \r\n                </Text>\r\n            </Container>\r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\nexport default Section;","import React from 'react'\r\nimport Page from 'components/layout/Page'\r\nimport * as Sections from './sections';\r\n\r\nconst Pages = (Sections as unknown) as { [key: string]: React.FC<{}> };\r\nconst RevenueModel:React.FC = () => {\r\n    return (\r\n        <Page>\r\n            { \r\n                Object.keys(Pages).reverse().map(function(key ) {\r\n                    const Page = Pages[key] as React.FC<{}>\r\n                    return <Page key={key} />\r\n                })\r\n            }\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default RevenueModel;","import React from 'react'\r\nimport styled from 'styled-components'\r\n// import { SvgContainer } from \"./svgicon-styles\"\r\n\r\ninterface Props {\r\n  Icon?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>\r\n  Img?: string\r\n  width?: number\r\n  height?: number\r\n  fill?: string\r\n}\r\n\r\nexport const SvgContainer = styled.div<{\r\n  height?: number\r\n  width?: number\r\n  fill?: string\r\n}>`\r\n  height: 'auto';\r\n  width: 'auto';\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & svg {\r\n    // fill: ${(props) => (props.fill ? props.fill : props.theme.colors.text)};\r\n    height: ${(props) => (props.height ? `${props.height}px` : '100%')};\r\n    width: ${(props) => (props.width ? `${props.width}px` : '100%')};\r\n  }\r\n`\r\n\r\nconst SvgIcon: React.FC<Props> = (props) => {\r\n  const { Icon, Img, width } = props\r\n  return (\r\n    <SvgContainer {...props}>\r\n      {Icon ? <Icon /> : <img src={Img} alt=\"tier-icon\" width={width} style={{ height: width }} />}\r\n    </SvgContainer>\r\n  )\r\n}\r\n\r\nexport default SvgIcon"],"names":["RevenueModel","name","description","image","SectionContainer","styled","height","breakpoints","mobileHeight","HeaderContainer","theme","addOnColors","background1","MainBG","DetailsContainer","Box","Flex","Title","Text","colors","primary","props","SvgIcon","Img","PNG","Container","Icons","IconModule","map","model","ind","Icon","iconElement","mr","className","fontSize","color","mediaQueries","md","as","bold","Pages","Sections","Page","Object","keys","reverse","key","SvgContainer","fill","text","width","src","alt","style"],"sourceRoot":""}